import pytest
import os
import copy
from pycti import Msg
from helper_test_utils import message_file_loader

MSG_DIR = os.path.join(os.path.dirname(__file__), 'example_messages')

@pytest.mark.messages
def test_aux_readings_parser():
    '''
    Test that the aux_readings_parser works correctly
    '''
    '''
    msg = bytearray([])
    msg += struct.pack('<f', aux_temperature_1)
    msg += struct.pack('<f', aux_temperature_1_dt)

    example_msg_name = 'client_login_request_msg'
    (msg_bin, msg_dict) = message_file_loader(MSG_DIR, example_msg_name)

    # Pack the msg_dict and check if it matches the example binary message
    packed_msg = Msg.Login.Client.pack(msg_dict)
    assert (packed_msg == msg_bin)

    # Checking parsing the example message binary and that it matches the msg_dict
    parsed_msg = Msg.Login.Client.parse(msg_bin)
    assert (parsed_msg == msg_dict)
    '''